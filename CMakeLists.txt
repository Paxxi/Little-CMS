cmake_minimum_required(VERSION 3.2)

project(lcms2 VERSION 2.9 LANGUAGES C)

if(MSVC)
  set(CMAKE_DEBUG_POSTFIX "d")
endif()

add_library(${PROJECT_NAME}
  src/cmsnamed.c
  src/cmsopt.c
  src/cmspack.c
  src/cmspcs.c
  src/cmsplugin.c
  src/cmsps2.c
  src/cmssamp.c
  src/cmssm.c
  src/cmstypes.c
  src/cmsvirt.c
  src/cmswtpnt.c
  src/cmsxform.c
  src/lcms2.def
  src/lcms2_internal.h
  src/cmsalpha.c
  src/cmscam02.c
  src/cmscgats.c
  src/cmscnvrt.c
  src/cmserr.c
  src/cmsgamma.c
  src/cmsgmt.c
  src/cmshalf.c
  src/cmsintrp.c
  src/cmsio0.c
  src/cmsio1.c
  src/cmslut.c
  src/cmsmd5.c
  src/cmsmtrx.c
  include/lcms2.h
  include/lcms2_plugin.h
)

target_include_directories(${PROJECT_NAME}
  PRIVATE
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src;${CMAKE_CURRENT_SOURCE_DIR}/include;>
  INTERFACE
  $<INSTALL_INTERFACE:include>
  PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
)

target_compile_definitions(${PROJECT_NAME}
  PRIVATE
  _CRT_SECURE_NO_WARNINGS
  _CRT_STDC_NO_DEPRECATE
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
  VERSION ${PROJECT_VERSION}
  COMPATIBILITY AnyNewerVersion
)

install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}
  RUNTIME DESTINATION bin
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
)

install(FILES
  include/lcms2.h
  include/lcms2_plugin.h
  DESTINATION include
)

if(MSVC)
  set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_PDB_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR} COMPILE_PDB_NAME ${PROJECT_NAME})
  install(FILES ${PROJECT_BINARY_DIR}/RelWithDebInfo/${PROJECT_NAME}.pdb DESTINATION lib CONFIGURATIONS RelWithDebInfo)
endif()

install(EXPORT ${PROJECT_NAME}
  FILE
  ${PROJECT_NAME}.cmake
  NAMESPACE
    ${PROJECT_NAME}::
  DESTINATION
    lib/cmake/${PROJECT_NAME}
)

install(FILES
  cmake/${PROJECT_NAME}-config.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
  DESTINATION
    lib/cmake/${PROJECT_NAME}
)
